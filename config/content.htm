<h1>About</h1>
<p></p>
<p><a href="https://github.com/ZHILIN-0817/site-ZHILIN-0817">https://github.com/ZHILIN-0817/site-ZHILIN-0817</a></p>
<p></p>
<h1>NOTE</h1>
<h2>python問題解答</h2>
<p></p>
<p>快速入門 適合初學者 <a href="https://tw.gitbook.net/python/python_quick_guide.html">https://tw.gitbook.net/python/python_quick_guide.html</a></p>
<p></p>
<p>學習遇到問題時可查看:<a href="https://stackoverflow.com/questions/tagged/python">https://stackoverflow.com/questions/tagged/python</a></p>
<p></p>
<p></p>
<h2>Python 變數與基本語法</h2>
<div>
<div>
<p><span>Python 變數選定規則</span><span> </span></p>
<ol>
<li>
<p><span style="color: #ff0000;">要避開使用關鍵字 </span></p>
</li>
<li>
<p><span style="color: #ff0000;">只可以以 _ 或大小寫字母開頭 </span></p>
</li>
</ol>
</div>
<div>
<p><span style="color: #ff0000;">列出 Python 的關鍵字</span><br/><span></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import keyword 
print(keyword.kwlist)</pre>
<p></p>
<div><span>利用 <span style="color: #ff0000;">for 迴圈執行變數增量或重複執行特定程序.</span></span><span> </span></div>
<div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">for i in range(1, 10, 1): 
    print(i)</pre>
<div><span>有關變數設定, <span style="color: #ff0000;">起始值使用, for 迴圈應用, 函式定義與呼叫</span></span><span> </span></div>
<div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def addto(upto):
  sum = 0
  for i in range(1, upto+1, 1):
    print("現在 sum 的值為: " + str(sum))
    sum = sum + i
    print("加上 " + str(i) + "之後, sum 的值為: " + str(sum))
    print("="*30)
addto(10)</pre>
<span><span style="color: #ff0000;"><br/></span></span></div>
<span><span style="color: #ff0000;"><br/></span></span></div>
<div><span><span style="color: #ff0000;"></span></span></div>
</div>
</div>
<h2>建立cp2022</h2>
<p>1)<span style="background-color: #ffff99;">點選紅色框框</span></p>
<p></p>
<p><img alt="" height="338" src="/images/cp2022.png" width="600"/></p>
<p>2)<span style="background-color: #ffff99;">並複製裡完整內容</span></p>
<p><img alt="" height="338" src="/images/cp2022-1.png" width="600"/></p>
<p></p>
<p>3)<span style="background-color: #ffff99;">進到個人倉儲網站 打開source code 貼上(2)內容</span></p>
<p><img alt="" height="338" src="/images/cp2022-3.png" width="600"/></p>
<p></p>
<p>4) <span style="background-color: #ffff99;">最後save</span> </p>
<p><img alt="" height="338" src="/images/cp2022-4.png" width="600"/></p>
<p></p>
<p>5)<span style="background-color: #ffff99;">完成上述內容再轉generate pages </span></p>
<p></p>
<h2>cp指令</h2>
<p><span style="color: #ff99cc; background-color: #ffff99;">cd tmp</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;"><img alt="" height="281" src="/images/cp指令1.png" width="500"/></span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;">cd site-ZHILIN-0817</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;"><img alt="" height="281" src="/images/cp指令2.png" width="500"/></span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;">cms</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;"><img alt="" height="281" src="/images/cp指令3.png" width="500"/></span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;">最後複製以下網址</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;">進到個人倉儲修改內容</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;"><img alt="" height="281" src="/images/cp指令4.png" width="500"/></span></p>
<p></p>
<h2>建立stud.cycu.org</h2>
<p>到gmail2000 找到自己的密碼</p>
<p>並到teams w8~w9 recodings 照影片步驟.......</p>
<h2>TCExam</h2>
<p><span style="color: #ff0000;">tcexam 考試時間只允許使用ipv6網路連線</span></p>
<p><span style="color: #ff0000;"><span data-contrast="auto">若要從外部連到考試主機, 可以利用:</span> <span data-contrast="auto">Proxy: 140.130.17.4   port 3128 </span> </span></p>
<p><span style="color: #ff0000;">如果還是不行，就用學校電腦考試</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">server {
    listen       [::]:80 default ipv6only=on;
    server_name  domain.cycu.org;
    #return       301 https://$server_name$request_uri;
     
    allow 2001:288:6004:xx::0/32;
    deny all;
 
return 302 https://domain.cycu.org;
     
    #location /{
        #root C:/tcexam/downloads;
        #auth_basic "For Authorized Users Only!";
        #auth_basic_user_file C:/tcexam/nginx-1.20.1/.htpasswd;
    #}
}</pre>
<p></p>
<h1>cp2022</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Blockt</button></p>
<h2>CP 靜態網頁連結</h2>
<p>學習 Brython 程式語言</p>
<p>執行 Three.js 相關 Brython 程式, 需要將<span> </span><a href="https://mde.tw/demo/downloads/py/pyweb3d.py">pyweb3d.py</a><span> </span>放入 downloads/py 目錄中</p>
<p></p>
<div style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
</script>
<h1>Homework</h1>
<h2>week5</h2>
<p><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/2bc180bc42af8948624111c3651bc8f4/raw/84d6edeec0cee8b772e1d8d076086d2d16a3237a/w5_hw.py">password generator</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 導入亂數模組
import random
# 導入字串模組
import string
# 利用 def 關鍵字定義函式
# 函式的輸入變數可以設定初始值
def password_generator(size=4, chars=string.ascii_lowercase + string.digits):
    # 函式內以多行註解說明函式功能
    """Generate random password
    """
    # 利用 return 關鍵字將所產生的亂數字串傳回
    return ''.join(random.choice(chars) for _ in range(size))
# 建立一個變數與隨後的字串對應
pass_string = "abcdefghkmnpqrstuwxyz123456789"
# 利用重複迴圈呼叫 password_generator() 函式 10 次
for i in range(10):
    print(password_generator(4, pass_string))</pre>
<p></p>
<pre></pre>
<pre></pre>
<div></div>
<p></p>
<h2>week10</h2>
<p></p>
<p>練習<a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/ebe41280f4163407bae08798ec001aac/raw/1959322965d2ac5be572d1dd0cf9ff8e0f066f57/w10_hw.py">add form 1~10</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">for i in range(1, 10, 2):
 print(i,end=" ")</pre>
<p><span style="color: #ff99cc; background-color: #ffff99;">程式要1加到10 要先 in range 1，10，</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;">然後以+2的方式呈現</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;">就會1  3  5  7  9 </span></p>
<h2>week11</h2>
<p><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/13a241345fbf42dbd1e4a956b6feb0a1/raw/9fa7de3111a7ac5d67184eaed2149c34670c2d15/w11_hw.py">缺考名單</a></p>
<p>以下為 w10 缺考名單:<br/>40823116<br/>40823139<br/>40823241<br/>40923102<br/>40923104<br/>40923140<br/>40923144<br/>40923150<br/>40923152<br/>40923156<br/>41123119<br/>41123121<br/>41123122<br/>41123127<br/>41123133<br/>41123143<br/>41123146<br/>41123149<br/>41123150<br/>41123152</p>
<p><span style="color: #ff99cc; background-color: #ffff99;">心得總結:</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;">我有來學校上課跟考試，我是帶自己的筆電來考試，</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;">在考試時段前是可以連上tcexam的，後來發現網路設定有問題 沒有在ipv6上就造成缺考的問題。</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;">所以以後考試會選用學校電腦來做線上考試。</span></p>
<p><span style="color: #ff99cc; background-color: #ffff99;">再來是考試內容還須要在透過影片回顧的方式做複習</span></p>
<h2>week12</h2>
<div>
<ul>
<li>將攝氏與華氏溫度單位轉換的公式列入.</li>
<li>請利用 <a href="https://www.diagrams.net" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://www.diagrams.net/">https://www.diagrams.net</a> 繪製一個攝氏與華氏溫度轉換的程式設計流程圖, 完成後將流程圖轉為 .png 格式後嵌入 w12 頁面中.</li>
<li>請根據程式設計流程圖, 在 w12 頁面中直接加入一個 Brython 程式, 使能在頁面中印出今天的日期、時間與該時間點的攝氏及華氏溫度. 例如: <span>今天是 2022 年 11 月 24 日, 現在時間 10:35, 攝氏溫度為 29 度, 華氏為 84.2 度</span>.</li>
<li>接下來請利用 Brython 程式語法中的 input() 在 w12 頁面中讓使用者按下"溫度換算"按鈕後, 跳出讓使用者輸入攝氏溫度值, 讓溫度單位轉換程式運算後, 可以同時列出使用者所輸入的攝氏與華氏溫度值.</li>
</ul>
<p></p>
<p><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/2bc180bc42af8948624111c3651bc8f4/raw/370f55383f7ddd2b1f37d994c48beca125a7eca6/w12_hw_ex1.py">ex1</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">user_input_temp = input("請輸入攝氏溫度值:")
print(type(user_input_temp))</pre>
<p><span style="background-color: #ffffff; color: #999999;">第一個範例的input ()是接受字串的提示</span></p>
<p><span style="background-color: #ffffff; color: #999999;">所以=imput("輸入攝氏溫度值:")這樣就可以了</span></p>
<p><span style="background-color: #ffffff; color: #999999;">接著在打上use_imput_tmp 的變數資料，然後就可以做溫度轉換</span></p>
<p><span style="color: #993366;"><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/2bc180bc42af8948624111c3651bc8f4/raw/3c7908b24f6718f0608b6b6050884a313b442880/w12_hw_ex2.py" style="color: #993366;">ex2</a></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">user_input_temp = input("請輸入攝氏溫度值:")
print(type(user_input_temp))
user_input_temp = float(user_input_temp)
Fahrenheit = (user_input_temp*9/5) + 32
print("攝氏 " + str(user_input_temp) + " 度, 等於華氏 " + str(Fahrenheit) + " 度.")</pre>
<p><span style="color: #999999; background-color: #ffffff;">ex2 的1 2行同第一題一樣</span></p>
<p><span style="color: #999999; background-color: #999999;"><span style="background-color: #ffffff;">接下來第三行的重點加入float浮點數 意思就是把字串轉為浮點數</span><br/></span></p>
<p><span style="color: #999999; background-color: #999999;"><span style="background-color: #ffffff;">然後第四行是要將攝氏轉華氏 所以要*9/5然後在+32</span></span></p>
<p><span style="color: #999999; background-color: #999999;"><span style="background-color: #ffffff;">最後一行是在說因為是浮點數 要跟字串相加 要加上str()才能轉為字串</span></span></p>
</div>
<h2>w12-1</h2>
<p><button id="btn1">取使用者輸入</button></p>
<div id="brython_div">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">&lt;h3&gt;w12-1&lt;/h3&gt;
&lt;!-- 
在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑
--&gt;
&lt;script src="/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;// &lt;![CDATA[
window.onload=function(){
brython({debug:1, pythonpath:['/static/','/downloads/py/']});
}
// ]]&gt;&lt;/script&gt;
&lt;!-- 以下事先在頁面中加入 id="brython_div" 的 div 標註
之後可利用 Brython 的 document 模組與此 html 標註對應
--&gt;&lt;/p&gt;
&lt;!-- 利用 html 建立一個 id="btn1" 的按鈕 --&gt;
&lt;p&gt;&lt;button id="btn1"&gt;取使用者輸入&lt;/button&gt;&lt;/p&gt;
&lt;div id="brython_div"&gt;&lt;/div&gt;
&lt;p&gt;
&lt;script type="text/python"&gt;// &lt;![CDATA[
from browser import html, document
# Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
#user_input_temp = input("請輸入攝氏溫度值:")
# 接著列出 user_input_temp 變數的資料型別
# 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面
#print(type(user_input_temp))
# 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應
brython_div = document["brython_div"]
# 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置
#brython_div &lt;= user_input_temp
# 之後若要列出 html, 則需要透過 Brython 的 html 模組
# 接下來要設法按下按鈕之後才執行取使用者 input 的流程
# 首先 comment 掉前面的 input() 與 print(), 同時蓋掉輸出, 並利用事件導向設計一個函式
def get_input(env):
    user_input_temp = input("請輸入攝氏溫度值:")
    brython_div &lt;= user_input_temp
# 透過 Brython browser 模組中的 document 物件將 id="btn1" 的物件中的 bind() 方法
# 讓使用者 click 後會經由瀏覽器中的 event 通知執行 get_input 函式
document["btn1"].bind('click', get_input)
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;</pre>
</div>
<div></div>
<p><br/><br/><br/><br/></p>
<p></p>
<p><span>操過過程在補上</span></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p><br/><br/><br/><br/><br/><br/></p>
<h2>week13</h2>
<p><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/2bc180bc42af8948624111c3651bc8f4/raw/f4057483930658e79e666612d2a36a4e9f4fb1c3/w13_hw.py">w13-1 hw</a></p>
<p></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
f=c*9/5+32
c=(f-32)*5/9
'''
c=input("請輸入攝氏溫度值")
print(c,type(c))</pre>
<p></p>
<p></p>
<p></p>
<p></p>
<p><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/bda7b8d8ede563fcc5c7106cb11e0fbf/raw/332cdcb29c214cd3525650fcf89a1224a327456a/w13_2_hw.py">w13-2</a><br/><br/></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
f = c*9/5 + 32
c = (f-32)*5/9
'''
c = input("請輸入攝氏溫度值")
#print(type(c))
c = float(c)
print("請輸入攝氏溫度: " +str(c), "等於華氏溫度: " + str(c*9/5 +32))</pre>
<p></p>
<h2>week14</h2>
<p><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/846c6af1dbee479cf50bd2f62ab433ee/raw/864b5208292275dc32cb5c153b4f40581dfaadf2/w14_1_hw.py">hw1</a> </p>
<p>讀取quiz成績</p>
<p></p>
<p><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/c75dd55f71bdf173c4747682e0c4d97c/raw/dfab92d2a88f61a1da4528f857764e994ddbe4d4/w14_hw_ex2.py">hw2</a></p>
<p>以下為 w14 缺考名單:<br/>40823116<br/>40823139<br/>40823241<br/>40923140<br/>40923149<br/>40923150<br/>40923152<br/>41123101<br/>41123102<br/>41123103<br/>41123116<br/>41123118<br/>41123121<br/>41123122<br/>41123124<br/>41123127<br/>41123133<br/>41123134<br/>41123146<br/>41123152</p>
<p></p>
<h2>w15</h2>
<p>1.為何學習計算機程式需要建立個人倉儲?</p>
<p><span style="color: #999999;">可以存取個人的檔案資料，每次更新內容都會有紀錄修改或是新增的內容，並且維護個人倉儲</span></p>
<p>2.全球資訊網能夠提供甚麼功能或有什麼優點?</p>
<p><span style="color: #999999;">網路上進行互動 和 瀏覽器的主要工具，能夠搜尋你想知道的所有事情</span></p>
<p></p>
<p>3.Replit, stud.cycu.org 與 localhost 分別代表甚麼?</p>
<p><span>Repli:<span style="color: #999999;">線上程式開發服務</span></span></p>
<p><span>stud.cycu.org:<span style="color: #999999;">是主機的名稱</span></span></p>
<p><span>localhost:<span style="color: #999999;">電腦網路中用於表示「此電腦」的主機名</span></span></p>
<p></p>
<p>4.https, ssh 到底提供使用者那些功能或優點?</p>
<p><span>https:<span style="color: #999999;">一種讓訪客在網站輸入任何私人資訊可以獲得保護的安全加密措施....</span></span></p>
<p><span>ssh: <span style="color: #999999;">遠端登入會話和其他網路服務提供安全性的協定</span></span></p>
<p></p>
<p>5.Brython 與 Python 有甚麼差別?</p>
<p><span style="color: #999999;">Brython:可以在瀏覽器上使用python取代avaScript。</span></p>
<p><span style="color: #999999;">Python:是一種程式語言。</span></p>
<p></p>
<p>6.能夠直接在瀏覽器中以 Brython 繪製中華民國國旗, 或模擬綠色方塊在方塊格點中任意移動, 代表甚麼?</p>
<p><span style="color: #999999;">我能透過寫程式的內容讓想要的位置出現圖形。</span></p>
<p><br/>7.變數, 字串, 整數, 浮點數, 數列, Tuple, Dictionary, 函式, 重複迴圈, class, 物件導向, 資料庫, 這些名詞對您而言代表甚麼?</p>
<p><span style="color: #808080;">這是程式語言的拼圖。</span></p>
<p><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/7137b2b3767ff7a6735a96b20e5c75ee/raw/7274a352ca040853448561ffef6dab03980ae139/w15_hw_ex1.py">綠色方塊原程式碼</a></p>
<p><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/e360c50a698b6d1402e336cb4074f5e9/raw/8e488463e66a263949bd874620c2081cf0d03c0a/w15_2_hw.py">修改後綠色方塊</a></p>
<p></p>
<h2>w16</h2>
<p>線上考試</p>
<p>自評成績</p>
<div><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/4329bacff5de23059b72f604b3c10e13/raw/621da62dc505ee31d65c8a6e824b3d3f423e30f8/w16_hw_ex1.py">綠色方塊 有按鈕版 </a></div><h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<div style="width: 100%; height: 100%;"></div>
<h1>W6 Fetch personal page</h1>
<p></p>
<p><a href="https://zhilin-0817.github.io/site-ZHILIN-0817/content/Brython.html?src=https://gist.githubusercontent.com/ZHILIN-0817/2bc180bc42af8948624111c3651bc8f4/raw/c603a3e6cc817d12691e765a3f3344a168b91af9/w6_hw.py">名單</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import document, html

brython_div1 = document["brython_div1"]
"""
brython_div1 &lt;= html.BUTTON("hello")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= html.A("google", href="https://google.com")
"""

url = "https://mde.tw/studlist/2022fall/1a.txt"
data = open(url).read().split("\n")
mdecp2022 = "https://mdecp2022.github.io/site-"
data = data[1:-1]
for i in data:
    stud = i.split("\t")
    stud_num = stud[0]
    github_acc = stud[1]
    #print(stud_num, github_acc)
    if github_acc == "":
        github_acc = stud_num
    site = mdecp2022 + github_acc
    link = html.A(stud_num, href=site)
    brython_div1 &lt;= link
    brython_div1 &lt;= html.BR()</pre>
<p></p>