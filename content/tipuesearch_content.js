var tipuesearch = {"pages": [{'title': 'About', 'text': '\n https://github.com/ZHILIN-0817/site-ZHILIN-0817 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'NOTE', 'text': '', 'tags': '', 'url': 'NOTE.html'}, {'title': 'python問題解答', 'text': '\n 快速入門 適合初學者  https://tw.gitbook.net/python/python_quick_guide.html \n \n 學習遇到問題時可查看: https://stackoverflow.com/questions/tagged/python \n \n \n', 'tags': '', 'url': 'python問題解答.html'}, {'title': 'Python 變數與基本語法', 'text': '\n \n Python 變數選定規則   \n \n \n 要避開使用關鍵字  \n \n \n 只可以以 _ 或大小寫字母開頭  \n \n \n \n \n 列出 Python 的關鍵字 \n import keyword \nprint(keyword.kwlist) \n \n 利用  for 迴圈執行變數增量或重複執行特定程序.   \n \n for i in range(1, 10, 1): \n    print(i) \n 有關變數設定,  起始值使用, for 迴圈應用, 函式定義與呼叫   \n \n def addto(upto):\n  sum = 0\n  for i in range(1, upto+1, 1):\n    print("現在 sum 的值為: " + str(sum))\n    sum = sum + i\n    print("加上 " + str(i) + "之後, sum 的值為: " + str(sum))\n    print("="*30)\naddto(10) \n \n \n \n \n \n', 'tags': '', 'url': 'Python 變數與基本語法.html'}, {'title': '建立cp2022', 'text': '1) 點選紅色框框 \n \n \n 2) 並複製裡完整內容 \n \n \n 3) 進到個人倉儲網站 打開source code 貼上(2)內容 \n \n \n 4)  最後save \xa0 \n \n \n 5) 完成上述內容再轉generate pages\xa0 \n \n', 'tags': '', 'url': '建立cp2022.html'}, {'title': 'cp指令', 'text': 'cd tmp \n \n cd site-ZHILIN-0817 \n \n cms \n \n 最後複製以下網址 \n 進到個人倉儲修改內容 \n \n \n', 'tags': '', 'url': 'cp指令.html'}, {'title': '建立stud.cycu.org', 'text': '到gmail2000 找到自己的密碼 \n 並到teams w8~w9 recodings 照影片步驟....... \n', 'tags': '', 'url': '建立stud.cycu.org.html'}, {'title': 'TCExam', 'text': 'tcexam 考試時間只允許使用ipv6網路連線 \n 若要從外部連到考試主機, 可以利用: \xa0 Proxy: 140.130.17.4\xa0 \xa0port 3128\xa0 \xa0 \n 如果還是不行，就用學校電腦考試 \n server {\n    listen       [::]:80 default ipv6only=on;\n    server_name  domain.cycu.org;\n    #return       301 https://$server_name$request_uri;\n     \n    allow 2001:288:6004:xx::0/32;\n    deny all;\n \nreturn 302 https://domain.cycu.org;\n     \n    #location /{\n        #root C:/tcexam/downloads;\n        #auth_basic "For Authorized Users Only!";\n        #auth_basic_user_file C:/tcexam/nginx-1.20.1/.htpasswd;\n    #}\n} \n \n', 'tags': '', 'url': 'TCExam.html'}, {'title': 'cp2022', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Blockt \n', 'tags': '', 'url': 'cp2022.html'}, {'title': 'CP 靜態網頁連結', 'text': '學習 Brython 程式語言 \n 執行 Three.js 相關 Brython 程式, 需要將 \xa0 pyweb3d.py \xa0 放入 downloads/py 目錄中 \n \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n  啟動 Brython  \n \n', 'tags': '', 'url': 'CP 靜態網頁連結.html'}, {'title': 'Homework', 'text': '', 'tags': '', 'url': 'Homework.html'}, {'title': 'week5', 'text': 'password generator \n # 導入亂數模組\nimport random\n# 導入字串模組\nimport string\n# 利用 def 關鍵字定義函式\n# 函式的輸入變數可以設定初始值\ndef password_generator(size=4, chars=string.ascii_lowercase + string.digits):\n    # 函式內以多行註解說明函式功能\n    """Generate random password\n    """\n    # 利用 return 關鍵字將所產生的亂數字串傳回\n    return \'\'.join(random.choice(chars) for _ in range(size))\n# 建立一個變數與隨後的字串對應\npass_string = "abcdefghkmnpqrstuwxyz123456789"\n# 利用重複迴圈呼叫 password_generator() 函式 10 次\nfor i in range(10):\n    print(password_generator(4, pass_string)) \n \n \n \n \n', 'tags': '', 'url': 'week5.html'}, {'title': 'week10', 'text': '\n 練習 add form 1~10 \n for i in range(1, 10, 2):\n print(i,end=" ") \n 程式要1加到10 要先 in range 1，10， \n 然後以+2的方式呈現 \n 就會1\xa0 3\xa0 5\xa0 7\xa0 9\xa0', 'tags': '', 'url': 'week10.html'}, {'title': 'week11', 'text': '缺考名單 \n 以下為 w10 缺考名單: 40823116 40823139 40823241 40923102 40923104 40923140 40923144 40923150 40923152 40923156 41123119 41123121 41123122 41123127 41123133 41123143 41123146 41123149 41123150 41123152 \n 心得總結: \n 我有來學校上課跟考試，我是帶自己的筆電來考試， \n 在考試時段前是可以連上tcexam的，後來發現網路設定有問題 沒有在ipv6上就造成缺考的問題。 \n 所以以後考試會選用學校電腦來做線上考試。 \n 再來是考試內容還須要在透過影片回顧的方式做複習', 'tags': '', 'url': 'week11.html'}, {'title': 'week12', 'text': '\n \n 將攝氏與華氏溫度單位轉換的公式列入. \n 請利用  https://www.diagrams.net  繪製一個攝氏與華氏溫度轉換的程式設計流程圖, 完成後將流程圖轉為 .png 格式後嵌入 w12 頁面中. \n 請根據程式設計流程圖, 在 w12 頁面中直接加入一個 Brython 程式, 使能在頁面中印出今天的日期、時間與該時間點的攝氏及華氏溫度. 例如:  今天是 2022 年 11 月 24 日, 現在時間 10:35, 攝氏溫度為 29 度, 華氏為 84.2 度 . \n 接下來請利用 Brython 程式語法中的 input() 在 w12 頁面中讓使用者按下"溫度換算"按鈕後, 跳出讓使用者輸入攝氏溫度值, 讓溫度單位轉換程式運算後, 可以同時列出使用者所輸入的攝氏與華氏溫度值. \n \n \n ex1 \n user_input_temp = input("請輸入攝氏溫度值:")\nprint(type(user_input_temp)) \n 第一個範例的input ()是接受字串的提示 \n 所以=imput("輸入攝氏溫度值:")這樣就可以了 \n 接著在打上use_imput_tmp 的變數資料，然後就可以做溫度轉換 \n ex2 \n user_input_temp = input("請輸入攝氏溫度值:")\nprint(type(user_input_temp))\nuser_input_temp = float(user_input_temp)\nFahrenheit = (user_input_temp*9/5) + 32\nprint("攝氏 " + str(user_input_temp) + " 度, 等於華氏 " + str(Fahrenheit) + " 度.") \n ex2 的1 2行同第一題一樣 \n 接下來第三行的重點加入float浮點數 意思就是把字串轉為浮點數 \n 然後第四行是要將攝氏轉華氏 所以要*9/5然後在+32 \n 最後一行是在說因為是浮點數 要跟字串相加 要加上str()才能轉為字串 \n', 'tags': '', 'url': 'week12.html'}, {'title': 'w12-1', 'text': '取使用者輸入 \n \n <h3>w12-1</h3>\n<!-- \n在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑\n-->\n<script src="./../cmsimde/static/brython.js"></script>\n<script src="./../cmsimde/static/brython_stdlib.js"></script>\n<!-- 啟動 Brython -->\n<p>\n<script>// <![CDATA[\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'/downloads/py/\']});\n}\n// ]]></script>\n<!-- 以下事先在頁面中加入 id="brython_div" 的 div 標註\n之後可利用 Brython 的 document 模組與此 html 標註對應\n--></p>\n<!-- 利用 html 建立一個 id="btn1" 的按鈕 -->\n<p><button id="btn1">取使用者輸入</button></p>\n<div id="brython_div"></div>\n<p>\n<script type="text/python">// <![CDATA[\nfrom browser import html, document\n# Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回\n#user_input_temp = input("請輸入攝氏溫度值:")\n# 接著列出 user_input_temp 變數的資料型別\n# 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面\n#print(type(user_input_temp))\n# 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應\nbrython_div = document["brython_div"]\n# 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置\n#brython_div <= user_input_temp\n# 之後若要列出 html, 則需要透過 Brython 的 html 模組\n# 接下來要設法按下按鈕之後才執行取使用者 input 的流程\n# 首先 comment 掉前面的 input() 與 print(), 同時蓋掉輸出, 並利用事件導向設計一個函式\ndef get_input(env):\n    user_input_temp = input("請輸入攝氏溫度值:")\n    brython_div <= user_input_temp\n# 透過 Brython browser 模組中的 document 物件將 id="btn1" 的物件中的 bind() 方法\n# 讓使用者 click 後會經由瀏覽器中的 event 通知執行 get_input 函式\ndocument["btn1"].bind(\'click\', get_input)\n// ]]></script>\n</p> \n \n \n \n \n 操過過程在補上 \n \n \n \n \n \n', 'tags': '', 'url': 'w12-1.html'}, {'title': 'week13', 'text': 'w13-1 hw \n \n \'\'\'\nf=c*9/5+32\nc=(f-32)*5/9\n\'\'\'\nc=input("請輸入攝氏溫度值")\nprint(c,type(c)) \n \n \n \n \n w13-2 \n \'\'\'\nf = c*9/5 + 32\nc = (f-32)*5/9\n\'\'\'\nc = input("請輸入攝氏溫度值")\n#print(type(c))\nc = float(c)\nprint("請輸入攝氏溫度: " +str(c), "等於華氏溫度: " + str(c*9/5 +32)) \n \n', 'tags': '', 'url': 'week13.html'}, {'title': 'week14', 'text': 'hw1 \xa0 \n 讀取quiz成績 \n \n hw2 \n 以下為 w14 缺考名單: 40823116 40823139 40823241 40923140 40923149 40923150 40923152 41123101 41123102 41123103 41123116 41123118 41123121 41123122 41123124 41123127 41123133 41123134 41123146 41123152 \n', 'tags': '', 'url': 'week14.html'}, {'title': 'week15', 'text': '1.為何學習計算機程式需要建立個人倉儲? \n 可以存取個人的檔案資料，每次更新內容都會有紀錄修改或是新增的內容，並且維護個人倉儲   2.全球資訊網能夠提供甚麼功能或有什麼優點? \n   3.Replit, stud.cycu.org 與 localhost 分別代表甚麼? \n Repli: \n stud.cycu.org: \n localhost: \n 4.https, ssh 到底提供使用者那些功能或優點? \n https: \n ssh:\xa0   5.Brython 與 Python 有甚麼差別? \n Brython:可以在瀏覽器上使用python取代avaScript。 \n Python:是一種程式語言。 6.能夠直接在瀏覽器中以 Brython 繪製中華民國國旗, 或模擬綠色方塊在方塊格點中任意移動, 代表甚麼? \n   7.變數, 字串, 整數, 浮點數, 數列, Tuple, Dictionary, 函式, 重複迴圈, class, 物件導向, 資料庫, 這些名詞對您而言代表甚麼? \n', 'tags': '', 'url': 'week15.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'Translations of Python', 'text': '創建這個單元是想透過 python 入門做學習紀錄跟重點整理方便複習 \n 這個單元擷取內容來自於: https://tw.gitbook.net/python/python_quick_guide.html \n \n \n', 'tags': '', 'url': 'Translations of Python.html'}, {'title': 'python 規則', 'text': '五個標準數據類型： \n \n \n 數字 \n \n \n 字符串 \n \n \n 列表 \n \n \n 元組 \n \n \n 字典 \n \n \n 四種不同的數值類型： \n \n \n int (有符號整數) \n \n \n long (長整數[也可以以八進製和十六進製表示]) \n \n \n float (浮點實數值) \n \n \n complex (複數) \n \n \n 運算符號 \n 假設 a = 10， b = 20 那麼 \n', 'tags': '', 'url': 'python 規則.html'}, {'title': 'W6 Fetch personal page', 'text': '\n 名單 \n from browser import document, html\n\nbrython_div1 = document["brython_div1"]\n"""\nbrython_div1 <= html.BUTTON("hello")\nbrython_div1 <= html.BR()\nbrython_div1 <= html.A("google", href="https://google.com")\n"""\n\nurl = "https://mde.tw/studlist/2022fall/1a.txt"\ndata = open(url).read().split("\\n")\nmdecp2022 = "https://mdecp2022.github.io/site-"\ndata = data[1:-1]\nfor i in data:\n    stud = i.split("\\t")\n    stud_num = stud[0]\n    github_acc = stud[1]\n    #print(stud_num, github_acc)\n    if github_acc == "":\n        github_acc = stud_num\n    site = mdecp2022 + github_acc\n    link = html.A(stud_num, href=site)\n    brython_div1 <= link\n    brython_div1 <= html.BR() \n', 'tags': '', 'url': 'W6 Fetch personal page.html'}]};